apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.fullname" . }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
        {{- if .Values.extraLabels }}
          {{ toYaml .Values.extraLabels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "backstage.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            # see /src/upbound-idp/app-config.production.yaml for usage
            - name: POSTGRES_HOST
              value: "{{ .Values.postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
            {{- if .Values.postgres.password }}
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.password }}"
            {{- end }}
            {{- if .Values.postgres.passwordSecretName }}
            - name: POSTGRES_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.postgres.passwordSecretName }}
                  key: {{ .Values.postgres.passwordSecretKey | default "password" }}
            {{- end }}
          {{- range $key, $value := .Values.env }}
            - name: "{{ tpl $key $ }}"
              value: "{{ tpl (print $value) $ }}"
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7007
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              port: http
              path: /healthcheck
          livenessProbe:
            httpGet:
              port: http
              path: /healthcheck
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

